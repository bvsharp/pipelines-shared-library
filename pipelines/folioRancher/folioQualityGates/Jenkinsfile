import org.jenkinsci.plugins.workflow.libs.Library
import org.folio.rest.GitHubUtility

@Library('pipelines-shared-library@RANCHER-1000') _

properties([
  buildDiscarder(logRotator(numToKeepStr: '20')),
  disableConcurrentBuilds(),
  parameters([
    folioParameters.agent(),
    folioParameters.refreshParameters(),
    ansiColor('xterm') {
      if (params.refresh_parameters) {
        currentBuild.result = 'ABORTED'
        println('REFRESH JOB PARAMETERS!')
        return
      }
    }
  ])
])

node('rancher') {
  stage('Init') {
    currentBuild.result = 'SUCCESS'
    echo "SUCCESS"
  }

  stage('Check Changes') {
   checkout scm
    echo "CHECK CHECK CHECK CHECK CHECK CHECK"
  }

  stage('Parallel QualiTY Gate Stages') {
    parallel(
      'Run karate tests': {
        stage('Run karate tests') {
          echo "Run karate tests"
        }
      },
      'Run cypress tests': {
        stage('Run cypress tests') {
          echo "Run cypress tests"
        }
      },
      'Run schema comparison': {
        stage('Run schema comparison') {
        echo "schema comparison tests"
          // Add code for 'Run schema comparison' stage here
        }
      }
    )
  }

  stage('Cleanup') {
    cleanWs notFailBuild: true
  }
}
