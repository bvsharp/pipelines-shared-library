import org.jenkinsci.plugins.workflow.libs.Library

@Library('pipelines-shared-library@RANCHER-1000') _

properties([
    buildDiscarder(logRotator(numToKeepStr: '30')),
    disableConcurrentBuilds(),
    parameters([
        /**
         *  Placeholder for job parameters
         *  */
        folioParameters.agent(),
        folioParameters.refreshParameters()
    ])
])

if (params.REFRESH_PARAMETERS) {
    currentBuild.result = 'ABORTED'
    return
}

ansiColor('xterm') {
    node(params.AGENT) {
        stage('Initialize') {
            buildName "folioCiQualityGates" // Set the build name
            buildDescription "Quality Gates for Folio CI/CD" // Set the build description
            echo 'init'
        }

        stage('Check changes') {
            steps {
                // Placeholder stage for future development
                echo 'Checking for code changes...'
            }
        }

        stage('Quality Checks') {
            parallel {
                stage('Run karate tests') {
                    steps {
                        // Placeholder stage for future development
                        echo 'Running Karate tests...'
                    }
                }

                stage('Run cypress tests') {
                    steps {
                        // Placeholder stage for future development
                        echo 'Running Cypress tests...'
                    }
                }

                stage('Run schema comparison') {
                    steps {
                        // Placeholder stage for future development
                        echo 'Running Schema comparison...'
                    }
                }
            }
        }
    }
}
